locale: pt-BR
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019
      t: >
          O mundo JavaScript poderia usar um pouco de classificação.


          Desde 2016, esta pesquisa coletou
          dados de mais de 20.000 desenvolvedores a cada ano para identificar tendências atuais e futuras.


          Responda a pesquisa e nos ajude a descobrir quais bibliotecas desenvolvedores
          querem aprender em seguida, quais têm os melhores índices de satisfação e muito mais.

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: Syntax
    - key: sections.syntax.description
      t: The grammar of JavaScript.

    - key: sections.language.title
      t: Language
    - key: sections.language.description
      t: The vocabulary of JavaScript.

    - key: sections.data_structures.title
      t: Data Structures
    - key: sections.data_structures.description
      t: How you store and manipulate data.

    - key: sections.browser_apis.title
      t: Browser APIs
    - key: sections.browser_apis.description
      t: The features provided by the browser.

    - key: sections.other_features.title
      t: Other Features
    - key: sections.other_features.description
      t: Other technologies and patterns

    - key: sections.patterns.title
      t: Patterns
    - key: sections.patterns.description
      t: How you prefer writing code

    - key: sections.javascript_flavors.title
      t: JavaScript Flavors
    - key: sections.javascript_flavors.description
      t: Languages that compile to JavaScript

    - key: sections.front_end_frameworks.title
      t: Front-end Frameworks
    - key: sections.front_end_frameworks.description
      t: Front-end frameworks and libraries

    - key: sections.datalayer.title
      t: Data Layer
    - key: sections.datalayer.description
      t: Loading and managing data in your app

    - key: sections.back_end_frameworks.title
      t: Back-end Frameworks
    - key: sections.back_end_frameworks.description
      t: JavaScript on the server

    - key: sections.testing.title
      t: Testing
    - key: sections.testing.description
      t: Tools for testing your code

    - key: sections.mobile_desktop.title
      t: Mobile & Desktop
    - key: sections.mobile_desktop.description
      t: JavaScript for mobile devices and desktop apps

    - key: sections.build_tools.title
      t: Build Tools
    - key: sections.build_tools.description
      t: Compiling & bundling code

    - key: sections.monorepo_tools.title
      t: Monorepo Tools
    - key: sections.monorepo_tools.description
      t: Tools used to manage JavaScript monorepos.
      
    - key: sections.tools_others.title
      t: Other Tools
    - key: sections.tools_others.description
      t: Other JavaScript tools
      
    - key: sections.other_tools.title
      t: Other Tools
    - key: sections.other_tools.description
      t: For these tools & technologies, just check the ones that you use regularly.

    ###########################################################################
    # Options
    ###########################################################################

    # JS pain points
    # - key: options.js_pain_points.browser_interoperability
    #   t: Compatibilidade do navegador
    # - key: options.js_pain_points.browser_interoperability.description
    #   t: Diferenças entre Chrome, Safari, Firefox, etc.
    # - key: options.js_pain_points.animations
    #   t: Animações
    # - key: options.js_pain_points.animations.description
    #   t: Gerenciando animações, transições, etc. usando JavaScript.
    # - key: options.js_pain_points.form_handling
    #   t: Manipulação de formulários
    # - key: options.js_pain_points.form_handling.description
    #   t: Criando formulários, gerenciando seu estado e erros e salvando seus dados.
    - key: options.js_pain_points.state_management
      t: Gerenciamento de estado
    - key: options.js_pain_points.state_management.description
      t: Gerenciando o estado de dados globais em aplicativos complexos.
    # - key: options.js_pain_points.performance_issues
    #   t: Problemas de desempenho
    # - key: options.js_pain_points.performance_issues.description
    #   t: Tamanhos de pacote, carregamento lento e outros problemas de desempenho.
    - key: options.js_pain_points.managing_dependencies
      t: Gerenciando dependências
    - key: options.js_pain_points.managing_dependencies.description
      t: Gerenciando dependências, versões de pacotes e tamanhos de pacotes.
    - key: options.js_pain_points.architecture
      t: Arquitetura de código
    - key: options.js_pain_points.architecture.description
      t: Organizando e mantendo sua base de código.
    - key: options.js_pain_points.finding_packages
      t: Encontrando pacotes
    - key: options.js_pain_points.finding_packages.description
      t: Encontrando e avaliando pacotes JavaScript.
    - key: options.js_pain_points.writing_modules
      t: Escrevedo módulos
    - key: options.js_pain_points.writing_modules.description
      t: Escrevendo módulos JavaScript e publicando-os como pacotes.
    - key: options.js_pain_points.debugging
      t: Debugging
    - key: options.js_pain_points.debugging.description
      t: Identificando e resolvendo problemas com seu código.
    - key: options.js_pain_points.async_code
      t: Código assíncrono
    - key: options.js_pain_points.async_code.description
      t: Manipulação de funções assíncronas.
    - key: options.js_pain_points.modules_management
      t: Gerenciamento de Módulos
    - key: options.js_pain_points.modules_management.description
      t: Escrevendo e importando módulos.
    - key: options.js_pain_points.date_management
      t: Gerenciamento de datas
    - key: options.js_pain_points.date_management.description
      t: Manipulação e manipulação de datas e horários.
    # - key: options.js_pain_points.xxx
    #   t: 
    # - key: options.js_pain_points.xxx.description
    #   t: 


    # JS missing features
    - key: options.currently_missing_from_js.static_typing
      t: Digitação Estática
    - key: options.currently_missing_from_js.static_typing.description
      t: Tipos nativos (semelhantes ao que o TypeScript oferece).
    - key: options.currently_missing_from_js.standard_library
      t: Biblioteca padrão
    - key: options.currently_missing_from_js.standard_library.description
      t: Uma biblioteca padrão de utilitários comuns
    - key: options.currently_missing_from_js.pattern_matching
      t: Correspondência de padrões
    - key: options.currently_missing_from_js.pattern_matching.description
      t: Uma nova palavra-chave `match` para objetos de correspondência de padrões.
    - key: options.currently_missing_from_js.pipe_operator
      t: Operador Pipe
    - key: options.currently_missing_from_js.pipe_operator.description
      t: Um novo operador `|>` para passar o resultado de uma função para outra.
    - key: options.currently_missing_from_js.decorators
      t: Decoradores
    - key: options.currently_missing_from_js.decorators.description
      t: Decoradores usados ​​para metaprogramar e adicionar funcionalidade a um valor.
    - key: options.currently_missing_from_js.immutable_data_structures
      t: Estruturas de dados imutáveis
    - key: options.currently_missing_from_js.immutable_data_structures.description
      t: Novas estruturas de dados profundamente imutáveis, como `Record` e `Tuple`.
    - key: options.currently_missing_from_js.better_date_management
      t: Melhor gerenciamento de datas
    - key: options.currently_missing_from_js.better_date_management.description
      t: Um novo objeto `Temporal` para trabalhar com datas e horas.
    - key: options.currently_missing_from_js.observable
      t: Observável
    - key: options.currently_missing_from_js.observable.description
      t: A new `Observable`` type used to model push-based data sources.
    # - key: options.currently_missing_from_js.xxx
    #   t: 
    # - key: options.currently_missing_from_js.xxx.description
    #   t: 
    

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: Desestruturando
    - key: features.destructuring.description
      t: 'Exemplo: `const { foo } = bar`'
    - key: features.spread_operator
      t: Spread operator
    - key: features.spread_operator.description
      t: 'Exemplo: `[...array1, ...array2]`'
    - key: features.arrow_functions
      t: Arrow Functions
    - key: features.arrow_functions.description
      t: 'Exemplo: `const foo = () => {}`'
    - key: features.nullish_coalescing
      t: Coalescência Nula
    - key: features.nullish_coalescing.description
      t: >
        Exemplo: `const foo = 0 ?? 42`
    - key: features.optional_chaining
      t: Encadeamento opcional
    - key: features.optional_chaining.description
      t: >
        Exemplo: `const dogName = adventurer.dog?.name`
    - key: features.private_fields
      t: Campos privados
    - key: features.private_fields.description
      t: >
        Exemplo: `class ClassWithPrivateField { #privateField }`

    # language
    - key: features.proxies
      t: Proxies
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Promises
    - key: features.decorators
      t: Decoradores
    - key: features.decorators.description
      t: >
          Em sua forma mais simples, um decorador é simplesmente uma maneira de 
          nvolver um pedaço de código com outro – literalmente “decorando-o”.
    - key: features.dynamic_import
      t: Importação dinâmica
    - key: features.dynamic_import.description
      t: >
        Exemplo: <code>await import('/modules/my-module.js')</code>
    - key: features.promise_all_settled
      t: Promise.allSettled()
    - key: features.big_int
      t: BigInt
    - key: features.numeric_separators
      t: Separadores Numéricos
    - key: features.string_replace_all
      t: String.prototype.replaceAll()
    - key: features.string_match_all
      t: String.prototype.matchAll()
    - key: features.logical_assignment
      t: Atribuição lógica
    - key: features.promise_any
      t: Promise.any()
    - key: features.array_at
      t: Array.prototype.at()
    - key: features.top_level_await
      t: Top-Level Await
    - key: features.intl
      t: Intl
    - key: features.custom_elements
      t: Custom Elements
    - key: features.shadow_dom
      t: Shadow DOM
    - key: features.page_visibility
      t: API de Visibilidade de Página 
    - key: features.broadcast_channel
      t: API do Canal de Transmissão
    - key: features.geolocation
      t: API de Geolocalização
    - key: features.file_system_access
      t: API de Acesso ao Sistema de Arquivos
    - key: features.web_share
      t: API de Compartilhamento da Web
    - key: features.webxr
      t: WebXR

    # data structures
    - key: features.maps
      t: Mapas
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Arrays tipados
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Web Components
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: Progressive Web Apps (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: Programação Orientada a Objetos
    - key: features.functional_programming
      t: Programação Funcional
    - key: features.reactive_programming
      t: Programação Reativa

    # upcoming features
    # - key: features.static_typing
    #   t: Tipagem Estática

    # - key: features.standard_library
    #   t: Biblioteca padrão
    
    # - key: features.pattern_matching
    #   t: Correspondência de padrões

    # - key: features.pipe_operator
    #   t: Operador Pipe

    # - key: features.immutable_data_structures
    #   t: Estruturas de Dados Imutáveis

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.angular.description
      t: >
        Observe que esta pergunta visa apenas a experiência [Angular](https://angular.io/),
        e especificamente *não* se aplica ao [AngularJS](https://angularjs.org/) obsoleto.
   
    ###########################################################################
    # Other Tools
    ###########################################################################

    - key: tools_others.runtimes
      t: JavaScript Runtimes
    - key: tools_others.runtimes.description
      t: Which engines/runtimes/execution environments do you regularly use?
    - key: tools_others.runtimes.others
      t: Other Runtimes
    - key: tools_others.runtimes.others.description
      t: Other answers (freeform field).

    - key: tools_others.package_registries
      t: Package Registries
    - key: tools_others.package_registries.description
      t: Which package registries do you regularly fetch packages from?
    - key: tools_others.package_registries.others
      t: Other Package Registries
    - key: tools_others.package_registries.others.description
      t: Other answers (freeform field).

    - key: tools_others.form_factors
      aliasFor: environments.form_factors
    - key: tools_others.form_factors.description
      aliasFor: environments.form_factors.description

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript está se movendo na direção certa

    - key: opinions.building_js_apps_overly_complex
      t: Construir aplicativos JavaScript está muito complexo no momento

    - key: opinions.js_over_used_online
      t: JavaScript é usado em excesso online

    - key: opinions.enjoy_building_js_apps
      t: Eu gosto de construir aplicativos JavaScript

    - key: opinions.would_like_js_to_be_main_lang
      t: Eu gostaria que o JavaScript fosse minha principal linguagem de programação

    - key: opinions.js_ecosystem_changing_to_fast
      t: O ecossistema JavaScript está mudando muito rápido

    - key: opinions_others.missing_from_js.others
      t: O que você sente que está faltando no JavaScript?
    - key: opinions_others.missing_from_js.others.description
      t: Recursos que você gostaria de ver em JavaScript um dia.

    - key: happiness.front_end_frameworks
      t: Quão satisfeito você está com o estado dos frameworks front-end?
    - key: happiness.back_end_frameworks
      t: Quão satisfeito você está com o estado das estruturas de back-end?
    - key: happiness.testing
      t: Quão satisfeito você está com o estado das ferramentas de teste?
    - key: happiness.mobile_desktop
      t: Quão satisfeito você está com o estado das estruturas móveis e de desktop?
    - key: happiness.build_tools
      t: Quão satisfeito você está com o estado das ferramentas de construção?
    - key: happiness.monorepo_tools
      t: Quão satisfeito você está com o estado das ferramentas monorepo?

    - key: happiness.state_of_the_web
      t: Quão satisfeito você está com o estado geral das tecnologias da web?

    - key: happiness.state_of_js
      t: Quão satisfeito você está com o estado geral do JavaScript?

    # Pain Points
    - key: opinions.js_pain_points
      t: Pontos problemáticos do JavaScript
    - key: opinions.js_pain_points.description
      t: Para cada confronto, escolha o aspecto do JavaScript que você mais gosta.

    - key: opinions_others.js_pain_points.others
      t: Outros Pontos problemáticos do JavaScript

    # Missing Features
    - key: opinions.currently_missing_from_js
      t: O que você sente que está faltando no JavaScript?
    - key: opinions.currently_missing_from_js.description
      t: Para cada confronto, escolha o recurso que você mais gostaria de usar no JavaScript hoje.
    - key: opinions_others.currently_missing_from_js.others
      t: Outros recursos ausentes

    # pain points/currently missing (results)
    - key: js_pain_points.js_pain_points_wins
      t: Pontos problemáticos do JavaScript
    - key: js_pain_points.js_pain_points_wins.description
      t: Com qual aspecto do JavaScript você tem mais dificuldade? Os resultados são classificados pelo número de rodadas do torneio vencidas.

    - key: js_pain_points.js_pain_points_matchups
      t: Pontos problemáticos do JavaScript (Confrontos)
    - key: js_pain_points.js_pain_points_matchups.description
      t: Com qual aspecto do JavaScript você tem mais dificuldade? Porcentagem de rodadas vencidas pelo item da esquerda em relação ao item do topo.

    - key: currently_missing_from_js.currently_missing_from_js_wins
      t: Recursos ausentes do JavaScript
    - key: currently_missing_from_js.currently_missing_from_js_wins.description
      t: Qual recurso você mais gostaria de poder usar no JavaScript hoje? Os resultados são classificados pelo número de rodadas do torneio vencidas.

    - key: currently_missing_from_js.currently_missing_from_js_matchups
      t: Recursos ausentes do JavaScript (Confrontos)
    - key: currently_missing_from_js.currently_missing_from_js_matchups.description
      t: Qual recurso você mais gostaria de poder usar no JavaScript hoje? Porcentagem de rodadas vencidas pelo item da esquerda em relação ao item do topo.

    ###########################################################################
    # Resources
    ###########################################################################
    
    - key: resources.first_steps
      t: Primeiros passos com JavaScript
    - key: resources.first_steps.description
      t: Ao começar, como você aprendeu JavaScript inicialmente?
